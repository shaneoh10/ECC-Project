name: AWS Deploy

on:
  workflow_call:

env:
  CONTAINER_NAME_APP: django
  CONTAINER_NAME_DB: postgres
  ECS_CLUSTER: ecc-project-cluster
  ECS_SERVICE: ecc-project-service
  ECR_REPOSITORY_APP: ecc-project-django
  ECR_REPOSITORY_DB: ecc-project-postgres
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  IMAGE_TAG: latest

jobs:
  deploy:
    name: AWS Deploy
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and tag django app image
        id: build-app-image
        run: |
          docker compose -f docker-compose.local.yml build django
          docker tag ecc_project_local_django:latest $ECR_REGISTRY/$ECR_REPOSITORY_APP:$IMAGE_TAG

      - name: Push django app image to AWS ECR
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_APP:$IMAGE_TAG

      - name: Build and tag Postgres image
        id: build-postgres-image
        run: |
          docker compose -f docker-compose.local.yml build postgres
          docker tag ecc_project_production_postgres:latest $ECR_REGISTRY/$ECR_REPOSITORY_DB:$IMAGE_TAG

      - name: Push Postgres image to AWS ECR
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_DB:$IMAGE_TAG

      - name: Download ECS task definition
        run: |
          aws ecs describe-task-definition \
            --task-definition ecc-project-task-definition \
            --query 'taskDefinition' > task-definition.json

      - name: Fill in the new image ID in the ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ env.CONTAINER_NAME_APP }}
          image: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY_APP }}:${{ env.IMAGE_TAG }}

      - name: Deploy updated ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
