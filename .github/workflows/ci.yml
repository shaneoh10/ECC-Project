name: Continuous Integration

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  pull_request:
    branches: ['master', 'main']
    paths-ignore: ['docs/**']

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1

  pytest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Build the Stack
        run: docker compose -f docker-compose.local.yml build django

      - name: Build the docs
        run: docker compose -f docker-compose.docs.yml build docs

      - name: Check DB Migrations
        run: docker compose -f docker-compose.local.yml run --rm django python manage.py makemigrations --check

      - name: Run DB Migrations
        run: docker compose -f docker-compose.local.yml run --rm django python manage.py migrate

      - name: Run Django Tests
        run: docker compose -f docker-compose.local.yml run django pytest

      - name: Tear down the Stack
        run: docker compose -f docker-compose.local.yml down

  terraform:
    name: "Terraform Format and Plan Check"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure GCP Credentials
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}"

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: ">= 502.0.0"
          project_id: "${{ secrets.GCP_PROJECT_ID }}"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.7
          terraform_wrapper: false

      - name: Terraform Format Check
        working-directory: terraform/gcp
        run: |
          terraform fmt -check

      - name: Terraform Init
        working-directory: terraform/gcp
        run: |
          terraform init

      - name: Terraform Plan
        working-directory: terraform/gcp
        env:
          TF_VAR_postgres_db: ${{ secrets.POSTGRES_DB }}
          TF_VAR_postgres_user: ${{ secrets.POSTGRES_USER }}
          TF_VAR_postgres_password: ${{ secrets.POSTGRES_PASSWORD }}
          TF_VAR_postgres_host: ${{ secrets.POSTGRES_HOST }}
        run: |
          terraform plan -no-color -out=terraform.tfplan

      - name: Validate Plan Output
        working-directory: terraform/gcp
        run: |
          if [ ! -f terraform.tfplan ]; then
            echo "Plan file not created, failing the job."
            exit 1  # Fail the job if the plan file is not created
          fi
