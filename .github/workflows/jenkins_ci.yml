name: Jenkins Pipeline Integration

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  trigger-jenkins:
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Jenkins Job
        id: trigger
        run: |
          # URL encode the token
          ENCODED_TOKEN=$(echo "${{ secrets.JENKINS_TOKEN }}" | jq -sRr @uri)

          # Store the full response and headers in a file
          RESPONSE_FILE="jenkins_response.txt"
          JENKINS_TRIGGER_URL="${{ secrets.JENKINS_URL }}/job/ecc-project/buildWithParameters?token=${ENCODED_TOKEN}"

          echo "Triggering Jenkins build..."
          echo "Using URL (token redacted): ${{ secrets.JENKINS_URL }}/job/ecc-project/buildWithParameters?token=****"

          HTTP_CODE=$(curl -s -w "%{http_code}" \
            -o "$RESPONSE_FILE" \
            "$JENKINS_TRIGGER_URL")

          echo "HTTP Response Code: $HTTP_CODE"
          echo "Response body:"
          cat "$RESPONSE_FILE"

          if [ "$HTTP_CODE" != "201" ] && [ "$HTTP_CODE" != "200" ]; then
            echo "Failed to trigger Jenkins job. HTTP code: $HTTP_CODE"
            exit 1
          fi

          # Extract queue URL from response headers if present
          QUEUE_URL=$(cat "$RESPONSE_FILE" | grep -i "location:" | cut -d " " -f 2- | tr -d '\r')

          if [ -z "$QUEUE_URL" ]; then
            # If no queue URL, but we got a success response, consider it triggered
            echo "Build triggered successfully, but no queue URL returned"
            exit 0
          fi

          echo "Queue URL: $QUEUE_URL"
          echo "queue_url=$QUEUE_URL" >> $GITHUB_OUTPUT

      - name: Wait 30 seconds for build to start
        if: success()
        run: sleep 30

      - name: Check Build Status
        if: success()
        run: |
          # Make a direct call to check if the build was triggered
          RESPONSE=$(curl -s "${{ secrets.JENKINS_URL }}/job/ecc-project/lastBuild/api/json")
          echo "Last build status: $RESPONSE"

          # Extract and check the result
          RESULT=$(echo "$RESPONSE" | jq -r '.result')
          if [ "$RESULT" = "SUCCESS" ]; then
            echo "Build succeeded!"
            exit 0
          elif [ "$RESULT" = "FAILURE" ] || [ "$RESULT" = "ABORTED" ]; then
            echo "Build failed or was aborted"
            exit 1
          elif [ "$RESULT" = "null" ]; then
            echo "Build is still in progress..."
            exit 0
          else
            echo "Unexpected status: $RESULT"
            exit 1
          fi
