name: GCP Deploy

on:
  workflow_call:

env:
  CONTAINER_NAME_APP: django
  CONTAINER_NAME_DB: postgres
  GCP_REGION: europe-west1
  VM_NAME_APP: ecc-project-django
  VM_NAME_DB: ecc-project-postgres
  IMAGE_TAG: latest

jobs:
  deploy:
    name: GCP Deploy
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Cloud Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker
        run: |
          gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

      - name: Build and tag Django app image
        id: build-app-image
        run: |
          docker compose -f docker-compose.local.yml build django
          docker tag ecc_project_local_django:latest ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_PROJECT_ID }}-django/${{ env.CONTAINER_NAME_APP }}:${{ env.IMAGE_TAG }}

      - name: Push Django app image to Artifact Registry
        run: |
          docker push ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_PROJECT_ID }}-django/${{ env.CONTAINER_NAME_APP }}:${{ env.IMAGE_TAG }}

      - name: Build and tag Postgres image
        id: build-postgres-image
        run: |
          docker compose -f docker-compose.local.yml build postgres
          docker tag ecc_project_production_postgres:latest ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_PROJECT_ID }}-postgres/${{ env.CONTAINER_NAME_DB }}:${{ env.IMAGE_TAG }}

      - name: Push Postgres image to Artifact Registry
        run: |
          docker push ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_PROJECT_ID }}-postgres/${{ env.CONTAINER_NAME_DB }}:${{ env.IMAGE_TAG }}

          - name: Deploy Postgres
          run: |
            gcloud compute instances add-metadata ${{ env.VM_NAME_DB }} \
              --zone=${{ env.GCP_REGION }}-b \
              --metadata=gce-container-declaration='spec:
                containers:
                  - name: postgres
                    image: "${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_PROJECT_ID }}-postgres/${{ env.CONTAINER_NAME_DB }}:${{ env.IMAGE_TAG }}"
                    env:
                      - name: POSTGRES_USER
                        value: "${{ secrets.POSTGRES_USER }}"
                      - name: POSTGRES_PASSWORD
                        value: "${{ secrets.POSTGRES_PASSWORD }}"
                      - name: POSTGRES_DB
                        value: "${{ secrets.POSTGRES_DB }}"
                      - name: POSTGRES_HOST_AUTH_METHOD
                        value: "md5"
                    ports:
                      - name: postgres
                        containerPort: 5432
                        hostPort: 5432
                restartPolicy: Always'

      - name: Deploy Django
        run: |
          postgres_host=$(gcloud compute instances describe ${{ env.VM_NAME_DB }} \
            --zone=${{ env.GCP_REGION }}-b \
            --format="get(networkInterfaces[0].networkIP)")

          gcloud compute instances add-metadata ${{ env.VM_NAME_APP }} \
            --zone=${{ env.GCP_REGION }}-b \
            --metadata=gce-container-declaration='spec:
              containers:
                - name: django
                  image: "${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_PROJECT_ID }}-django/${{ env.CONTAINER_NAME_APP }}:${{ env.IMAGE_TAG }}"
                  env:
                    - name: POSTGRES_USER
                      value: "${{ secrets.POSTGRES_USER }}"
                    - name: POSTGRES_PASSWORD
                      value: "${{ secrets.POSTGRES_PASSWORD }}"
                    - name: POSTGRES_DB
                      value: "${{ secrets.POSTGRES_DB }}"
                    - name: POSTGRES_HOST
                      value: "'$postgres_host'"
                    - name: POSTGRES_PORT
                      value: "5432"
                    - name: USE_DOCKER
                      value: "yes"
                    - name: IPYTHONDIR
                      value: "/app/.ipython"
                    - name: DJANGO_SETTINGS_MODULE
                      value: "config.settings.local"
                  ports:
                    - name: django
                      containerPort: 8080
                      hostPort: 8080
              restartPolicy: Always'
