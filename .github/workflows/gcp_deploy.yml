name: GCP Deploy
on:
  workflow_call:

env:
  CONTAINER_NAME_APP: django
  CONTAINER_NAME_DB: postgres
  GCP_REGION: europe-west1
  VM_NAME_APP: ecc-project-django
  VM_NAME_DB: ecc-project-postgres
  IMAGE_TAG: latest

jobs:
  deploy:
    name: GCP Deploy
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Cloud Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker
        run: |
          gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

      - name: Build and tag Django app image
        id: build-app-image
        run: |
          docker compose -f docker-compose.local.yml build django
          docker tag ecc_project_local_django:latest ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_PROJECT_ID }}-django/${{ env.CONTAINER_NAME_APP }}:${{ env.IMAGE_TAG }}

      - name: Push Django app image to Artifact Registry
        run: |
          docker push ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_PROJECT_ID }}-django/${{ env.CONTAINER_NAME_APP }}:${{ env.IMAGE_TAG }}

      - name: Build and tag Postgres image
        id: build-postgres-image
        run: |
          docker compose -f docker-compose.local.yml build postgres
          docker tag ecc_project_production_postgres:latest ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_PROJECT_ID }}-postgres/${{ env.CONTAINER_NAME_DB }}:${{ env.IMAGE_TAG }}

      - name: Push Postgres image to Artifact Registry
        run: |
          docker push ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_PROJECT_ID }}-postgres/${{ env.CONTAINER_NAME_DB }}:${{ env.IMAGE_TAG }}

      - name: Deploy Postgres
        run: |
          gcloud compute ssh ${{ env.VM_NAME_DB }} --zone=${{ env.GCP_REGION }}-a -- \
            'sudo docker pull ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_PROJECT_ID }}-postgres/${{ env.CONTAINER_NAME_DB }}:${{ env.IMAGE_TAG }} && \
             sudo docker stop postgres || true && \
             sudo docker rm postgres || true && \
             sudo docker run -d \
               --name postgres \
               -e POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
               -e POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
               -e POSTGRES_DB=${{ secrets.POSTGRES_DB }} \
               -e POSTGRES_HOST_AUTH_METHOD=md5 \
               -p 5432:5432 \
               ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_PROJECT_ID }}-postgres/${{ env.CONTAINER_NAME_DB }}:${{ env.IMAGE_TAG }}'

      - name: Deploy Django
        run: |
          gcloud compute ssh ${{ env.VM_NAME_APP }} --zone=${{ env.GCP_REGION }}-a -- \
            'sudo docker pull ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_PROJECT_ID }}-django/${{ env.CONTAINER_NAME_APP }}:${{ env.IMAGE_TAG }} && \
             sudo docker stop django || true && \
             sudo docker rm django || true && \
             sudo docker run -d \
               --name django \
               -e POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
               -e POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
               -e POSTGRES_DB=${{ secrets.POSTGRES_DB }} \
               -e POSTGRES_HOST=$(gcloud compute instances describe ${{ env.VM_NAME_DB }} --zone=${{ env.GCP_REGION }}-a --format="get(networkInterfaces[0].networkIP)") \
               -e POSTGRES_PORT=5432 \
               -e USE_DOCKER=yes \
               -e IPYTHONDIR=/app/.ipython \
               -e DJANGO_SETTINGS_MODULE=config.settings.local \
               -p 8080:8080 \
               ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_PROJECT_ID }}-django/${{ env.CONTAINER_NAME_APP }}:${{ env.IMAGE_TAG }}'
