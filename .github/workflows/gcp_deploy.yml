name: GCP Deploy

on:
  workflow_call:

env:
  CONTAINER_NAME_APP: django
  CONTAINER_NAME_DB: postgres
  GCP_REGION: europe-west1
  CLOUD_RUN_SERVICE_APP: ecc-project-django
  CLOUD_RUN_SERVICE_DB: ecc-project-postgres
  IMAGE_TAG: latest

jobs:
  deploy:
    name: GCP Deploy
    runs-on: ubuntu-latest
    environment: dev
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Google Cloud Auth
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker
      run: |
        gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

    - name: Build and tag Django app image
      id: build-app-image
      run: |
        docker compose -f docker-compose.local.yml build django
        docker tag ecc_project_local_django:latest ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_PROJECT_ID }}-django/${{ env.CONTAINER_NAME_APP }}:${{ env.IMAGE_TAG }}

    - name: Push Django app image to Artifact Registry
      run: |
        docker push ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_PROJECT_ID }}-django/${{ env.CONTAINER_NAME_APP }}:${{ env.IMAGE_TAG }}

    - name: Build and tag Postgres image
      id: build-postgres-image
      run: |
        docker compose -f docker-compose.local.yml build postgres
        docker tag ecc_project_production_postgres:latest ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_PROJECT_ID }}-postgres/${{ env.CONTAINER_NAME_DB }}:${{ env.IMAGE_TAG }}

    - name: Push Postgres image to Artifact Registry
      run: |
        docker push ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_PROJECT_ID }}-postgres/${{ env.CONTAINER_NAME_DB }}:${{ env.IMAGE_TAG }}

    - name: Deploy Postgres to Cloud Run
      run: |
        gcloud run deploy ${{ env.CLOUD_RUN_SERVICE_DB }} \
          --image ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_PROJECT_ID }}-postgres/${{ env.CONTAINER_NAME_DB }}:${{ env.IMAGE_TAG }} \
          --platform managed \
          --region ${{ env.GCP_REGION }} \
          --project ${{ secrets.GCP_PROJECT_ID }} \
          --timeout 300 \
          --memory 1Gi \
          --cpu 1 \
          --set-env-vars POSTGRES_TRUST_AUTH_METHOD=trust,POSTGRES_USER=${{ secrets.POSTGRES_USER }},POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }},POSTGRES_DB=${{ secrets.POSTGRES_DB }}

    - name: Deploy Django app to Cloud Run
      run: |
        gcloud run deploy ${{ env.CLOUD_RUN_SERVICE_APP }} \
          --image ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_PROJECT_ID }}-django/${{ env.CONTAINER_NAME_APP }}:${{ env.IMAGE_TAG }} \
          --platform managed \
          --region ${{ env.GCP_REGION }} \
          --project ${{ secrets.GCP_PROJECT_ID }} \
          --allow-unauthenticated \
          --timeout 300 \
          --memory 1Gi \
          --cpu 1 \
          --set-env-vars DJANGO_SETTINGS_MODULE=config.settings.local,POSTGRES_USER=${{ secrets.POSTGRES_USER }},POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }},POSTGRES_DB=${{ secrets.POSTGRES_DB }},POSTGRES_HOST=${{ env.CLOUD_RUN_SERVICE_DB }}-809000347521.${{ env.GCP_REGION }}.run.app,POSTGRES_PORT=5432,USE_DOCKER=yes,IPYTHONDIR=/app/.ipython
